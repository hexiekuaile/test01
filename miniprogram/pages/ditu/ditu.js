"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var dataFromNet = require("./dataFromNet");
Page({
    data: {
        markersSimple: [],
        marker: undefined,
        markers: [],
        showModalStatus: false,
    },
    onLoad: function () {
        dataFromNet.markersSimple();
        var thiss = this;
        dataFromNet.markersSimple.valuesCallback = function (data) {
            thiss.setData({
                markersSimple: data
            });
        };
    },
    onShow: function () {
    },
    showModal: function (event) {
        var id = event.markerId;
        for (var _i = 0, _a = this.data.markers; _i < _a.length; _i++) {
            var v = _a[_i];
            if (id == v.id) {
                this.setData({
                    marker: v,
                    showModalStatus: true
                });
                break;
            }
        }
        if (!this.data.marker) {
            if (!dataFromNet.marker.valueCallback) {
                var thiss_1 = this;
                dataFromNet.marker.valueCallback = function (value) {
                    thiss_1.data.markers.push(value);
                    thiss_1.setData({
                        marker: value,
                        showModalStatus: true
                    });
                };
            }
            dataFromNet.marker(id);
        }
    },
    hideModal: function () {
        this.setData({
            marker: undefined,
            imgs: [],
            showModalStatus: false
        });
    },
    calling: function (event) {
        var tel = event.currentTarget.dataset.id;
        wx.makePhoneCall({
            phoneNumber: tel,
            success: function () {
                console.log("拨打电话成功！");
            },
            fail: function () {
                console.log("拨打电话失败！");
            }
        });
    },
    daohang: function () {
        var m = this.data.marker;
        this.data.marker = undefined;
        wx.openLocation({
            latitude: m.latitude,
            longitude: m.longitude,
            name: m.name,
            address: m.address
        });
    },
});
//# sourceMappingURL=data:application/json;base64,