"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Video = (function () {
    function Video(vid, type, name, valueCallback) {
        this.vid = vid;
        this.type = type;
        this.name = name;
        this.valueCallback = valueCallback;
        this.convertVidToUrl();
    }
    Video.prototype.convertVidToUrl = function () {
        var that = this;
        wx.request({
            url: 'https://vv.video.qq.com/getinfo',
            data: {
                vids: that.vid,
                platform: 101001,
                charge: 0,
                otype: 'json'
            },
            header: {
                'content-type': 'application/json;charset=UTF-8'
            },
            method: 'GET',
            dataType: 'json',
            success: function (res) {
                var str = res.data;
                str = str.substring("QZOutputJson=".length, str.length - 1);
                var json = JSON.parse(str);
                var fn = json.vl.vi[0].fn;
                var url = json.vl.vi[0].ul.ui[0].url;
                var fvkey = json.vl.vi[0].fvkey;
                that.src = url + fn + "?vkey=" + fvkey;
                that.valueCallback(that);
            },
            fail: function (res) {
                console.log(that.name + ' 转换视频vid时错误：' + res.errMsg);
            }
        });
    };
    return Video;
}());
exports.Video = Video;
;
;
function getVideo(URLVideoJSON) {
    var func = function () {
        wx.request({
            url: URLVideoJSON,
            success: function (res) {
                var vs = res.data;
                func.values = new Array(vs.length);
                for (var i = 0; i < vs.length; i++)
                    func.values[i] = new Video(vs[i].vid, vs[i].type, vs[i].name, func.valuesCallback);
            },
            fail: function (res) {
                console.log('视频请求网络连接错误： ' + res.errMsg);
            }
        });
    };
    return func;
}
exports.getVideo = getVideo;
;
//# sourceMappingURL=data:application/json;base64,