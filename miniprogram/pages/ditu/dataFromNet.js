"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MarkerSimple = (function () {
    function MarkerSimple(id, type, longitude, latitude, name) {
        this.id = id;
        this.type = type;
        this.longitude = longitude;
        this.latitude = latitude;
        this.name = name;
    }
    return MarkerSimple;
}());
exports.MarkerSimple = MarkerSimple;
;
;
var urlMarkersSimpleJson = 'https://a-1256136493.cos.ap-nanjing.myqcloud.com/fyhbss/markersSimple.json';
function getMarkersSimple() {
    var func = function () {
        wx.request({
            url: urlMarkersSimpleJson,
            success: function (res) {
                func.values = res.data;
                if (func.valuesCallback) {
                    func.valuesCallback(func.values);
                }
            },
            fail: function (res) {
                console.log('网络连接错误： ' + res.errMsg);
            }
        });
    };
    return func;
}
;
exports.markersSimple = getMarkersSimple();
var Marker = (function () {
    function Marker(id, type, longitude, latitude, name, address, tel, jiedainengli, info, imgNum) {
        if (info === void 0) { info = ''; }
        if (imgNum === void 0) { imgNum = 0; }
        this.id = id;
        this.type = type;
        this.longitude = longitude;
        this.latitude = latitude;
        this.name = name;
        this.address = address;
        this.tel = tel;
        this.jiedainengli = jiedainengli;
        this.info = info;
        this.imgNum = imgNum;
        if (imgNum > 9)
            this.imgNum = 9;
        else if (imgNum < 0)
            this.imgNum = 0;
    }
    return Marker;
}());
exports.Marker = Marker;
;
;
var urlMarkersJson = 'https://a-1256136493.cos.ap-nanjing.myqcloud.com/fyhbss/marker';
function getMarker() {
    var func = function (id) {
        wx.request({
            url: urlMarkersJson + id + '.json',
            success: function (res) {
                func.value = res.data;
                if (func.valueCallback) {
                    func.valueCallback(func.value);
                }
            },
            fail: function (res) {
                console.log('网络连接错误 marker' + id + ': ' + res.errMsg);
            }
        });
    };
    return func;
}
;
exports.marker = getMarker();
//# sourceMappingURL=data:application/json;base64,