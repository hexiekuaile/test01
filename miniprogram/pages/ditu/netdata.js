"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.marker = exports.Marker = exports.markersSimple = exports.MarkerSimple = void 0;
var commonData_1 = require("../../utils/commonData");
var MarkerSimple = (function () {
    function MarkerSimple(id, type, longitude, latitude, name) {
        this.id = id;
        this.type = type;
        this.longitude = longitude;
        this.latitude = latitude;
        this.name = name;
    }
    return MarkerSimple;
}());
exports.MarkerSimple = MarkerSimple;
;
;
var URL_MARKERSSIMPLE_JSON = commonData_1.EXTERNAL_DATA_PATH + "data/markersSimple.json";
function getMarkersSimple() {
    var func = function () {
        wx.request({
            url: URL_MARKERSSIMPLE_JSON,
            success: function (res) {
                func.values = res.data;
                if (func.valuesCallback) {
                    func.valuesCallback(func.values);
                }
            },
            fail: function (res) {
                console.log('markersSimple网络连接错误： ' + res.errMsg);
            }
        });
    };
    return func;
}
;
exports.markersSimple = getMarkersSimple();
var URL_PATH_PRE_IMG = commonData_1.EXTERNAL_DATA_PATH + "/img/";
var Marker = (function () {
    function Marker(id, type, longitude, latitude, name, address, tel, jiedainengli, imgNum, imgsURL, info) {
        if (imgNum === void 0) { imgNum = 0; }
        if (imgsURL === void 0) { imgsURL = []; }
        if (info === void 0) { info = ''; }
        this.id = id;
        this.type = type;
        this.longitude = longitude;
        this.latitude = latitude;
        this.name = name;
        this.address = address;
        this.tel = tel;
        this.jiedainengli = jiedainengli;
        this.info = info;
        this.imgNum = imgNum;
        this.imgsURL = imgsURL;
        if (imgNum > 9)
            this.imgNum = 9;
        else if (imgNum < 0)
            this.imgNum = 0;
        if (imgsURL.length == 0 && imgNum > 0)
            for (var i = 0; i < imgNum; i++) {
                var u = URL_PATH_PRE_IMG + id + i + '.jpg';
                this.imgsURL.push(u);
            }
    }
    return Marker;
}());
exports.Marker = Marker;
;
;
var URL_MARKERS_JSON = commonData_1.EXTERNAL_DATA_PATH + "/data/marker";
function getMarker() {
    var func = function (id) {
        wx.request({
            url: URL_MARKERS_JSON + id + '.json',
            success: function (res) {
                func.value = res.data;
                if (func.value.imgNum > 9)
                    func.value.imgNum = 9;
                else if (func.value.imgNum < 0)
                    func.value.imgNum = 0;
                func.value.imgsURL = [];
                if (func.value.imgNum > 0 && func.value.imgsURL.length == 0)
                    for (var i = 1; i < func.value.imgNum + 1; i++) {
                        var u = URL_PATH_PRE_IMG + id + i + '.jpg';
                        func.value.imgsURL.push(u);
                    }
                if (func.valueCallback) {
                    func.valueCallback(func.value);
                }
            },
            fail: function (res) {
                console.log('地图定位点详细信息，网络连接错误 id=' + id + ' : ' + res.errMsg);
            }
        });
    };
    return func;
}
;
exports.marker = getMarker();
//# sourceMappingURL=data:application/json;base64,